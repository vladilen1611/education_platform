# Generated by Django 2.0.5 on 2020-10-21 11:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Прошел активацию?')),
                ('send_messages', models.BooleanField(default=True, verbose_name='Слать оповещения о новых комментариях?')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Является учителем?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(default=None, upload_to=main.models.get_timestamp_path, verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Дополнительная материалы',
                'verbose_name_plural': 'Дополнительные материалы',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=30, verbose_name='Автор')),
                ('content', models.CharField(max_length=255, verbose_name='Содержание')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Выводить на экран?')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Опубликован')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, verbose_name='Название')),
                ('content', models.TextField(verbose_name='Oпиcaниe')),
                ('file', models.FileField(default=None, upload_to=main.models.get_timestamp_path, verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Курсовой проект',
                'verbose_name_plural': 'Курсовые проекты',
            },
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.CourseProject', verbose_name='Курсовой проект7')),
                ('student1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student1', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 1')),
                ('student2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student2', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 2')),
                ('student3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student3', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 3')),
                ('student4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student4', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь 4')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='GroupStudents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Группа студентов',
                'verbose_name_plural': 'Группы студентов',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, verbose_name='Урок')),
                ('content', models.TextField(verbose_name='Oпиcaниe')),
                ('contacts', models.TextField(verbose_name='Koнтaкты')),
                ('video', models.CharField(default=None, max_length=140, verbose_name='Видео')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Выводить в списке?')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Опубликовано')),
                ('order', models.SmallIntegerField(db_index=True, default=0, verbose_name='Порядок')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ('order', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Название')),
                ('order', models.SmallIntegerField(db_index=True, default=0, verbose_name='Порядок')),
                ('description', models.TextField(default=None, null=True, verbose_name='Описание курса')),
                ('image', models.ImageField(blank=True, upload_to=main.models.get_timestamp_path, verbose_name='Изображение')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Lesson', verbose_name='Урок'),
        ),
        migrations.AddField(
            model_name='additionalfile',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Lesson', verbose_name='Урок'),
        ),
        migrations.CreateModel(
            name='SubRubric',
            fields=[
            ],
            options={
                'verbose_name': 'Подрубрика',
                'verbose_name_plural': 'Подрубрики',
                'ordering': ('super_rubric__order', 'super_rubric__name', 'order', 'name'),
                'proxy': True,
                'indexes': [],
            },
            bases=('main.rubric',),
        ),
        migrations.CreateModel(
            name='SuperRubric',
            fields=[
            ],
            options={
                'verbose_name': 'Надрубрика',
                'verbose_name_plural': 'Надрубрики',
                'ordering': ('order', 'name'),
                'proxy': True,
                'indexes': [],
            },
            bases=('main.rubric',),
        ),
        migrations.AddField(
            model_name='rubric',
            name='super_rubric',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.SuperRubric', verbose_name='Надрубрика'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='rubric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.SubRubric', verbose_name='Рубрика'),
        ),
        migrations.AddField(
            model_name='groupstudents',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SubRubric', verbose_name='Курс'),
        ),
        migrations.AddField(
            model_name='courseproject',
            name='rubric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.SubRubric', verbose_name='Рубрика'),
        ),
    ]
